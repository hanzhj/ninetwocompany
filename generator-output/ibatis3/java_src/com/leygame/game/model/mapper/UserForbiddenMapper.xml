<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="UserForbidden">

	<resultMap id="RM.UserForbidden" type="com.leygame.game.model.UserForbidden">
        <result property="id" column="id"/>
        <result property="operator" column="operator"/>
        <result property="forbiddenType" column="forbiddenType"/>
        <result property="userAccount" column="userAccount"/>
        <result property="productId" column="productId"/>
        <result property="role" column="role"/>
        <result property="description" column="description"/>
        <result property="addTime" column="add_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="UserForbidden.columns">
	    <![CDATA[
		id,operator,forbiddenType,userAccount,productId,role,description,add_time
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="UserForbidden.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_user_forbidden (
        	id ,
        	operator ,
        	forbiddenType ,
        	userAccount ,
        	productId ,
        	role ,
        	description ,
        	add_time 
        ) VALUES (
        	#{id} ,
        	#{operator} ,
        	#{forbiddenType} ,
        	#{userAccount} ,
        	#{productId} ,
        	#{role} ,
        	#{description} ,
        	#{addTime} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="UserForbidden.update" >
    <![CDATA[
        UPDATE t_user_forbidden SET
	        operator = #{operator} ,
	        forbiddenType = #{forbiddenType} ,
	        userAccount = #{userAccount} ,
	        productId = #{productId} ,
	        role = #{role} ,
	        description = #{description} ,
	        add_time = #{addTime} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="UserForbidden.delete">
    <![CDATA[
        DELETE FROM t_user_forbidden WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="UserForbidden.getById" resultMap="RM.UserForbidden">
		SELECT <include refid="UserForbidden.columns" />
	    <![CDATA[
		    FROM t_user_forbidden 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="UserForbidden.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(operator)">
				AND operator = #{operator}
			</if>
	       <if test="@Ognl@isNotEmpty(forbiddenType)">
				AND forbiddenType = #{forbiddenType}
			</if>
	       <if test="@Ognl@isNotEmpty(userAccount)">
				AND userAccount = #{userAccount}
			</if>
	       <if test="@Ognl@isNotEmpty(productId)">
				AND productId = #{productId}
			</if>
	       <if test="@Ognl@isNotEmpty(role)">
				AND role = #{role}
			</if>
	       <if test="@Ognl@isNotEmpty(description)">
				AND description = #{description}
			</if>
	       <if test="@Ognl@isNotEmpty(addTimeBegin)">
				AND add_time >= #{addTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(addTimeEnd)">
				AND add_time &lt;= #{addTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="UserForbidden.findPage.count" resultType="long">
        SELECT count(*) FROM t_user_forbidden 
		<include refid="UserForbidden.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="UserForbidden.findPage" resultMap="RM.UserForbidden">
    	SELECT <include refid="UserForbidden.columns" />
	    FROM t_user_forbidden 
		<include refid="UserForbidden.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

