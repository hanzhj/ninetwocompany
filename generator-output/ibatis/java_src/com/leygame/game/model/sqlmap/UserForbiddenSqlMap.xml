<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.UserForbidden" class="com.leygame.game.model.UserForbidden">
        <result property="id" column="id"/>
        <result property="operator" column="operator"/>
        <result property="forbiddenType" column="forbiddenType"/>
        <result property="userAccount" column="userAccount"/>
        <result property="productId" column="productId"/>
        <result property="role" column="role"/>
        <result property="description" column="description"/>
        <result property="addTime" column="add_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="UserForbidden.columns">
	    <![CDATA[
        id ,operator ,forbiddenType ,userAccount ,productId ,role ,description ,add_time 
	    ]]>
	</sql>
	
    <insert id="UserForbidden.insert" >
    <![CDATA[
        INSERT INTO t_user_forbidden (
        	id ,
        	operator ,
        	forbiddenType ,
        	userAccount ,
        	productId ,
        	role ,
        	description ,
        	add_time 
        ) VALUES (
        	#id# ,
        	#operator# ,
        	#forbiddenType# ,
        	#userAccount# ,
        	#productId# ,
        	#role# ,
        	#description# ,
        	#addTime# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="id" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="UserForbidden.update" >
    <![CDATA[
        UPDATE t_user_forbidden SET
	        operator = #operator# ,
	        forbiddenType = #forbiddenType# ,
	        userAccount = #userAccount# ,
	        productId = #productId# ,
	        role = #role# ,
	        description = #description# ,
	        add_time = #addTime# 
        WHERE 
	        id = #id# 
    ]]>
    </update>

    <delete id="UserForbidden.delete">
    <![CDATA[
        DELETE FROM t_user_forbidden WHERE
        id = #id# 
    ]]>
    </delete>
    
    <select id="UserForbidden.getById" resultMap="RM.UserForbidden">
	    SELECT <include refid="UserForbidden.columns"/>
	    <![CDATA[
	        FROM t_user_forbidden 
	        WHERE 
		        id = #id# 
	    ]]>
    </select>

	<sql id="UserForbidden.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="id">
		             id = #id#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operator">
		             operator = #operator#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="forbiddenType">
		             forbiddenType = #forbiddenType#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userAccount">
		             userAccount = #userAccount#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="productId">
		             productId = #productId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="role">
		             role = #role#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="description">
		             description = #description#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="addTimeBegin">
		             add_time >= #addTimeBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="addTimeEnd">
		             add_time &lt;= #addTimeEnd#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="UserForbidden.findPage.count" resultClass="long">
        SELECT count(*) FROM t_user_forbidden <include refid="UserForbidden.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="UserForbidden.findPage" resultMap="RM.UserForbidden">
    	SELECT <include refid="UserForbidden.columns"/> FROM t_user_forbidden 
		<include refid="UserForbidden.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

	
</sqlMap>

